name: "Merge Contentstack branches"

on:
  workflow_dispatch:
    inputs:
      api_key:
        type: string
        description: 'STACK_API_KEY. Default is development stack'
        default: "blta88cf8aaa9f0bdb2"
        required: true
      authorization:
        type: string
        description: 'STACK_MANAGEMENT_TOKEN. Default is development stack'
        default: "cs1327b2e47cf746839491e2c1"
        required: true
      base_branch:
        type: choice
        description: 'Base branch'
        default: "staging"
        required: true
        options:
          - "main"
          - "staging"
          - "preview"
      compare_branch:
        type: choice
        description: 'Compare branch'
        default: "preview"
        required: true
        options:
          - "main"
          - "staging"
          - "preview"

jobs:
  update_stack:
    name: "Merge branches in Contentstack. only for the content type and global field modules of your stack"
    runs-on: ubuntu-latest
    steps:
      - name: Show all environment variables
        env:
          API_KEY: ${{ inputs.api_key }}
          BASE_URL: "https://eu-api.contentstack.com"
          default_merge_strategy: "overwrite_with_compare"
          merge_comment: "merge comment"
        run: |
          echo "Merge branches on Contentstack!"
          echo "api_key: ${{ env.API_KEY }}"
          echo "authorization: ${{ inputs.authorization }}"
          echo "base_branch: ${{ inputs.base_branch }}"
          echo "compare_branch: ${{ inputs.compare_branch }}"
      - name: Merging Branches API
        run: |
          echo '${{ env.API_KEY }}'
          # curl --location '${{ env.BASE_URL }}/v3/stacks/branches_merge?base_branch=${{ inputs.base_branch }}&compare_branch=${{ inputs.compare_branch }}&default_merge_strategy=${{ env.default_merge_strategy }}&merge_comment=${{ env.merge_comment }}' \
          # --header 'api_key: ${{ inputs.api_key }}' \
          # --header 'authorization: ${{ inputs.authorization }}' \
          # --header 'Content-Type: application/json' \
          # --data '{ }'
