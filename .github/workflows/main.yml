name: "Merge Contentstack branches"

on:
  workflow_dispatch:
    inputs:
      api_key:
        type: string
        description: 'STACK_API_KEY. Default is development stack'
        default: "blta88cf8aaa9f0bdb2"
        required: true
      authorization:
        type: string
        description: 'STACK_MANAGEMENT_TOKEN. Default is development stack'
        default: "cs1327b2e47cf746839491e2c1"
        required: true
      base_branch:
        type: choice
        description: 'Base branch'
        default: "preview"
        required: true
        options:
          - "main"
          - "staging"
          - "preview"
      compare_branch:
        type: choice
        description: 'Compare branch'
        default: "staging"
        required: true
        options:
          - "main"
          - "staging"
          - "preview"
jobs:
  update_stack:
    name: "Merge branches in Contentstack. Only for the content type and global field modules of your stack"
    runs-on: ubuntu-latest
    env: 
      base_url: "https://eu-api.contentstack.com"
      default_merge_strategy: "overwrite_with_compare"
      merge_comment: "merge_comment"
      MAX_BRANCHES: 5
    steps:
      - name: Verify the branch count in Contentstack.
        run: |
          url="${{ env.base_url }}/v3/stacks/branches"  
          # Execute curl and capture both the HTTP status code and the response body
          http_status=$(curl --location --silent --write-out "%{http_code}" --output response.json "$url" \
            --header "api_key: ${{ inputs.api_key }}" \
            --header "authorization: ${{ inputs.authorization }}" \
            --header 'Content-Type: application/json')
          
          # Check for successful response
          if [ "$http_status" -eq 200 ] || [ "$http_status" -eq 202 ]; then
              echo "Check branch count successful"
          else
              echo "Check branch count failed with status code: $http_status"
              exit 1
          fi
          
          # Parse the response to count branches
          branch_count=$(grep -o '"uid":' response.json | wc -l)
          
          # Compare the count with the maximum
          echo "Branch count: $branch_count"
          if [ "$branch_count" -gt $MAX_BRANCHES ]; then
              echo "Error: More than $MAX_BRANCHES branches found. For merging branches, there should be no more than $MAX_BRANCHES  branches."
              exit 1
          fi
    
      - name: Merging Branches API
        run: |
          echo "Merging Branches in Contentstack..."
          url="${{ env.base_url }}/v3/stacks/branches_merge?base_branch=${{ inputs.base_branch }}&compare_branch=${{ inputs.compare_branch }}&default_merge_strategy=${{ env.default_merge_strategy }}&merge_comment=${{ env.merge_comment }}"
          response=$(curl --location "$url" \
            --header "api_key: ${{ inputs.api_key }}" \
            --header "authorization: ${{ inputs.authorization }}" \
            --header 'Content-Type: application/json' \
            --data '{ }' \
            --write-out "%{http_code}" --silent --output /dev/null)

          # Check for successful response
          if [ "$response" -eq 200 ] || [ "$response" -eq 202 ]; then
              echo "Merge successful"
          else
              echo "Merge failed with status code: $response"
              exit 1
          fi

